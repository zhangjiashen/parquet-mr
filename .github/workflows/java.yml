# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Build and Test

on: push

jobs:
  build-aarch64:
    name: Build Parquet with JDK ${{ matrix.java }} and ${{ matrix.codecs }} on aarch64
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [ '11' ]
        codecs: [ 'uncompressed,brotli', 'gzip,snappy' ]

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Cache Local Maven Repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Test
      uses: uraimo/run-on-arch-action@v2
      with:
        arch: aarch64
        distro: ubuntu22.04
        githubToken: ${{ github.token }}
        env: |
          CI_TARGET_BRANCH: $GITHUB_HEAD_REF
          TEST_CODECS: ${{ matrix.codecs }}
          JAVA_VERSION: ${{ matrix.java }}
        dockerRunArgs: |
          --volume "${PWD}:/parquet" --volume "$HOME/.m2/repository:/root/.m2/repository"
        install: |
          apt-get update -q -y
          apt-get install -q -y openjdk-${{ matrix.java }}-jdk maven thrift-compiler git
        run: |
          set -x
          export JAVA_HOME=/usr/lib/jvm/java-${{ matrix.java }}-openjdk-arm64  # for maven-javadoc-plugin
          java --version
          mvn --version
          git config --global --add safe.directory /parquet
          cd /parquet
          export MAVEN_OPTS=$(mvn help:evaluate -Dexpression=extraJavaTestArgs -q -DforceStdout)
          mvn install --batch-mode --no-transfer-progress -DskipTests=true -Dmaven.javadoc.skip=true -Dsource.skip=true -Djava.version=${{ matrix.java }}
          mvn verify --batch-mode --no-transfer-progress javadoc:javadoc -Pci-test
          
